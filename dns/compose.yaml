version: "3.8"

services:
  caddy:
    image: ghcr.io/alexbidenko/proxy-dns/dns-caddy:latest
    ports:
      - "80:80/tcp"
      - "80:80/udp"
      - "443:443/tcp"
      - "443:443/udp"
    volumes:
      - caddy-data:/data
      - caddy-config:/config
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure

  application:
    image: ghcr.io/alexbidenko/proxy-dns/dns-application:latest
    expose:
      - 53
      - 443
      - 853
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "853:853/tcp"
      - "853:853/udp"
    environment:
      PROXY_SERVER_ADDRESS: ${PROXY_SERVER_ADDRESS}
      PROXY_SERVER_ADDRESS_IPV6: ${PROXY_SERVER_ADDRESS_IPV6}
      LOCATION_SERVER_ORIGIN: ${LOCATION_SERVER_ORIGIN}
      UPSTREAM_DNS: ${UPSTREAM_DNS}
    volumes:
      - caddy-data:/data
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure

  pihole:
    image: pihole/pihole:latest
    environment:
      TZ: 'Europe/Moscow'
    cap_add:
      - NET_ADMIN
    volumes:
      - pihole:/etc/pihole
      - pihole-dnsmasq:/etc/dnsmasq.d
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure

volumes:
  caddy-data:
  caddy-config:
  pihole:
  pihole-dnsmasq:
